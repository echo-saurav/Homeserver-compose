---
services:
  glance:
    image: ghcr.io/echo-saurav/glance:latest
    container_name: glanceapp
    # pull_policy defines the decisions Compose implementations will make when it starts to pull images. Possible values are:
    # always: Compose always pulls the image from the registry.
    # never: Compose doesn't pull the image from a registry and relies on the platform cached image. If there is no cached image, a failure is reported.
    # missing: Compose pulls the image only if it's not available in the platform cache. (default)
    # build: Compose builds the image. Compose rebuilds the image if it's already present.
    # pull_policy: always
    volumes:
      - ./data/config/:/app/config
      - ./data/assets/:/assets
      # host time setting
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      # - /var/run/docker.sock:/var/run/docker.sock:ro
    # environment:
    #   - DOCKER_HOST=tcp://dockerproxy-glance:2375
    ports:
      - 6149:8080
    restart: unless-stopped
    networks:
        - traefik-net
    labels:
      - "traefik.enable=true"
      # duckdns
      - traefik.http.routers.glance-public.rule=Host(`${DUCK_BASE}`)
      - traefik.http.routers.glance-public.entrypoints=websecure
      - traefik.http.routers.glance-public.tls=true
      # https
      - "traefik.http.routers.glanceapp.rule=host(`glanceapp.home.arpa`)"
      - "traefik.http.routers.glanceapp.entrypoints=websecure"
      - 'traefik.http.routers.glanceapp.tls=true'
      - "traefik.http.services.glanceapp.loadbalancer.server.port=8080"
      # http
      - "traefik.http.routers.glanceapp-insecure.rule=host(`glanceapp.home.arpa`)"
      - "traefik.http.routers.glanceapp-insecure.entrypoints=web"


  # dockerproxy-glance:
  #   image: ghcr.io/tecnativa/docker-socket-proxy:latest
  #   container_name: dockerproxy-glance
  #   networks:
  #     - traefik-net
  #   environment:
  #   - CONTAINERS=0 # Allow access to viewing containers
  #   - SERVICES=0 # Allow access to viewing services (necessary when using Docker Swarm)
  #   - TASKS=0 # Allow access to viewing tasks (necessary when using Docker Swarm)
  #   - POST=0 # Disallow any POST operations (effectively read-only)
  #   ports:
  #   - 127.0.0.1:2377:2375
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
  #   restart: unless-stopped
 

networks:
  traefik-net:
    external: true
    name: traefik-net

