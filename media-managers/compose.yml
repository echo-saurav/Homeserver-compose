---
services:
  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    depends_on:
      - flaresolverr
      - transmission
      - prowlarr
    networks:
      - traefik-net
    volumes:
      # - ~/Public/Media/Downloads:/downloads
      # - ~/Public/Media/Movies:/movies
      - ~/Public/Media:/data
      - ./data/radarr:/config
    ports:
      - 8082:7878
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"  
      # https
      - "traefik.http.routers.radarr.rule=Host(`radarr-auto.home.arpa`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - 'traefik.http.routers.radarr.tls=true'
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      # http
      - "traefik.http.routers.radarr-insecure.rule=Host(`radarr-auto.home.arpa`)"
      - "traefik.http.routers.radarr-insecure.entrypoints=web"


  radarr-manual:
    container_name: radarr-manual
    image: lscr.io/linuxserver/radarr:latest
    depends_on:
      - flaresolverr
      - transmission
      - prowlarr
    networks:
      - traefik-net
    volumes:
      - ~/Public/Media:/data
      - ./data/radarr-manual:/config
    ports:
      - 8043:7878
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # https
      - "traefik.http.routers.radarr-manual.rule=Host(`radarr.home.arpa`)"
      - "traefik.http.routers.radarr-manual.entrypoints=websecure"
      - 'traefik.http.routers.radarr-manual.tls=true'
      - "traefik.http.services.radarr-manual.loadbalancer.server.port=7878"
      # http
      - "traefik.http.routers.radarr-manual-insecure.rule=Host(`radarr.home.arpa`)"
      - "traefik.http.routers.radarr-manual-insecure.entrypoints=web"

  # qbittorrent:
  #   image: lscr.io/linuxserver/qbittorrent:latest
  #   container_name: qbittorrent
  #   environment:
  #     - PUID=${UID}
  #     - PGID=${GID}
  #     - TZ=${TZ}
  #     - WEBUI_PORT=8080
  #     - TORRENTING_PORT=6881
  #   ports:
  #     # for bittorrent traffic
  #     - 6881:6881/tcp
  #     - 6881:6881/udp
  #     # for WebUI
  #     - 3904:8080/tcp
  #   stop_grace_period: 30m
  #   tty: true
  #   volumes:
  #     - ./data/qbit/config:/config
  #     - ./data/qbit/downloads:/downloads
  #

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - traefik-net
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
    volumes: 
      - ~/Public/Media:/data
      # - ~/Public/Media/TVShows:/tv 
      # - ~/Public/Media/Downloads:/downloads 
      - ./data/sonarr:/config
    ports:
      - 8092:8989
    restart: unless-stopped
    labels:
      - "traefik.enable=true"  
      # https
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.home.arpa`)"      
      - "traefik.http.routers.sonarr.entrypoints=websecure"      
      - 'traefik.http.routers.sonarr.tls=true'      
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      # http
      - "traefik.http.routers.sonarr-insecure.rule=Host(`sonarr.home.arpa`)"
      - "traefik.http.routers.sonarr-insecure.entrypoints=web"



  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    # depends_on:
    #   - whisperasr
    networks:
      - traefik-net
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
    volumes:
      - ./data/bazarr/config:/config
      - ~/Public/Media:/data
    ports:
      - 6767:6767
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # https
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.home.arpa`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - 'traefik.http.routers.bazarr.tls=true'
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      # http
      - "traefik.http.routers.bazarr-insecure.rule=Host(`bazarr.home.arpa`)"
      - "traefik.http.routers.bazarr-insecure.entrypoints=web"


  bazarr-manual:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr-manual
    # depends_on:
    #   - whisperasr
    networks:
      - traefik-net
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
    volumes:
      - ./data/bazarr-manual/config:/config
      - ~/Public/Media:/data
    ports:
      - 6762:6767
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # https
      - "traefik.http.routers.bazarr-manual.rule=Host(`bazarr-manual.home.arpa`)"
      - "traefik.http.routers.bazarr-manual.entrypoints=websecure"
      - 'traefik.http.routers.bazarr-manual.tls=true'
      - "traefik.http.services.bazarr-manual.loadbalancer.server.port=6767"
      # http
      - "traefik.http.routers.bazarr-manual-insecure.rule=Host(`bazarr-manual.home.arpa`)"
      - "traefik.http.routers.bazarr-manual-insecure.entrypoints=web"


  # whisperasr:
  #   image: onerahmet/openai-whisper-asr-webservice:latest
  #   container_name: whisperasr
  #   volumes:
  #     - ./data/whisperasr/data:/data/whisper
  #     - ./data/whisperasr/cache:/root/.cache/whisper
  #   environment:
  #     - ASR_MODEL_PATH=/data/whisper
  #     - ASR_MODEL=small
  #     - ASR_ENGINE=faster_whisper
  #   ports:
  #     - 9001:9000
  #   networks:
  #     - traefik-net
  #   restart: unless-stopped
  #

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    depends_on:
      - transmission
      - flaresolverr
    networks:
      - traefik-net
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
    volumes:
      - ./data/prowlarr:/config
    ports:
      - 9697:9696
    restart: unless-stopped
    labels:
      - "traefik.enable=true"  
      # https
      - "traefik.http.routers.prowlarr.rule=host(`prowlarr.home.arpa`)"      
      - "traefik.http.routers.prowlarr.entrypoints=websecure"      
      - 'traefik.http.routers.prowlarr.tls=true' 
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      # http
      - "traefik.http.routers.prowlarr-insecure.rule=host(`prowlarr.home.arpa`)"
      - "traefik.http.routers.prowlarr-insecure.entrypoints=web"



  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    networks:
      - traefik-net
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TZ}
    ports:
      - "${PORT:-8192}:8191"
    restart: unless-stopped         


  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    networks:
      - traefik-net
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
      - TRANSMISSION_WEB_HOME=/transmissionic/ #optional
      - USER=${USER}
      - PASS=${PASS}
      - WHITELIST= 
      - PEERPORT= 
      - HOST_WHITELIST= 
    volumes:
      # - ~/Public/Media/Downloads:/downloads
      - ~/Public/Media:/data
      - ./data/transmissionic-webui-v1.8.0/:/transmissionic/
      - ./data/transmission/:/config
    ports:
      - 9093:9091
      # - 51413:51413
      # - 51413:51413/udp
    restart: unless-stopped
    labels:
      - "traefik.enable=true"  
      # https
      - "traefik.http.routers.transmission.rule=host(`transmission.home.arpa`)"      
      - "traefik.http.routers.transmission.entrypoints=websecure"      
      - 'traefik.http.routers.transmission.tls=true'      
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      # http
      - "traefik.http.routers.transmission-insecure.rule=host(`transmission.home.arpa`)"
      - "traefik.http.routers.transmission-insecure.entrypoints=web"


  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    depends_on:
      - radarr
      - sonarr
    networks:
      - traefik-net
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
    ports:
      - 5056:5055
    volumes:
      - ./data/jellyseerr:/app/config
    restart: unless-stopped
    labels:
      - traefik.enable=true
      # adguard domain
      # https
      - "traefik.http.routers.jellyseerr-local.rule=Host(`jellyseerr.home.arpa`)"
      - "traefik.http.routers.jellyseerr-local.entrypoints=websecure"
      - "traefik.http.routers.jellyseerr-local.tls=true"
      # http
      - "traefik.http.routers.jellyseerr-local-insecure.rule=Host(`jellyseerr.home.arpa`)"
      - "traefik.http.routers.jellyseerr-local-insecure.entrypoints=web"
      - traefik.http.services.jellyseerr.loadbalancer.server.port=5055


  # fileflows:
  #   image: revenz/fileflows
  #   container_name: fileflows
  #   restart: unless-stopped
  #   # restart: always
  #   ports:
  #     - 19200:5000
  #   networks:
  #     - traefik-net
  #   devices:
  #     - /dev/dri:/dev/dri
  #     # - /dev/dri/renderD128:/dev/dri/renderD128
  #     # - /dev/dri/card0:/dev/dri/card0    
  #   environment:
  #     - TempPathHost=/tmp
  #     - TZ=${TZ}
  #   volumes:
  #     - ~/Public/Media/:/media
  #     - ./data/fileflows/data:/app/Data
  #     - ./data/fileflows/log:/app/Logs
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - /tmp/fileflows:/temp
  #   labels:
  #     - "traefik.enable=true"  
  #     # https
  #     - "traefik.http.routers.fileflows.rule=host(`flow.home`)"      
  #     - "traefik.http.routers.fileflows.entrypoints=websecure"      
  #     - 'traefik.http.routers.fileflows.tls=true'      
  #     - "traefik.http.services.fileflows.loadbalancer.server.port=5000"
  #     # http
  #     - "traefik.http.routers.fileflows-insecure.rule=host(`flow.home`)"
  #     - "traefik.http.routers.fileflows-insecure.entrypoints=web"

  cleanuparr:
    image: ghcr.io/cleanuparr/cleanuparr:latest
    container_name: cleanuparr
    restart: unless-stopped
    depends_on:
      - radarr
      - radarr-manual
      - sonarr
      - transmission
    networks:
      - traefik-net
    ports:
      - 11011:11011
    volumes:
      - ./data/cleanuparr:/config
    environment:
      - PORT=11011
      - PUID=${UID}
      - PGID=${GID}
      - UMASK=022
      - TZ=${TZ}
      # - BASE_PATH=
    labels:
      - "traefik.enable=true"  
      # https
      - "traefik.http.routers.clean.rule=Host(`clean.home.arpa`)"
      - "traefik.http.routers.clean.entrypoints=websecure"
      - 'traefik.http.routers.clean.tls=true'
      - "traefik.http.services.clean.loadbalancer.server.port=11011"
      # http
      - "traefik.http.routers.clean-insecure.rule=Host(`clean.home.arpa`)"
      - "traefik.http.routers.clean-insecure.entrypoints=web"


  huntarr:
    image: ghcr.io/plexguide/huntarr:latest
    container_name: huntarr
    restart: unless-stopped
    depends_on:
      - radarr
      - radarr-manual
      - sonarr
      - transmission
    networks:
      - traefik-net
    ports:
      - 9705:9705
    volumes:
      - ./data//huntarr:/config
    environment:
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"  
      # https
      - "traefik.http.routers.hunterr.rule=Host(`hunterr.home.arpa`)"
      - "traefik.http.routers.hunterr.entrypoints=websecure"
      - 'traefik.http.routers.hunterr.tls=true'
      - "traefik.http.services.hunterr.loadbalancer.server.port=9705"
      # http
      - "traefik.http.routers.hunterr-insecure.rule=Host(`hunterr.home.arpa`)"
      - "traefik.http.routers.hunterr-insecure.entrypoints=web"



networks:
  traefik-net:
    external: true
    name: traefik-net


