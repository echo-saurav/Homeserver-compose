#
# tools and function
OPENWEATHER_API_KEY="199862122e13f4245a5398310af4bcd6"

WEBUI_AUTH=true
ENABLE_SIGNUP=true
WEBUI_NAME="Saurav AI"
DEFAULT_MODELS="qwen2.5:1.5b"
DEFAULT_USER_ROLE="user"

# OLLAMA_BASE_URL="http://192.168.0.102:11434"
OLLAMA_BASE_URLS="http://192.168.0.102:11434;http://192.168.0.120:11434"

# load balancing open ai base
# OPENAI_API_BASE_URL=
# OPENAI_API_BASE_URLS=
# OPENAI_API_KEY
# OPENAI_API_KEYS
#

# tasks
TASK_MODEL=
TASK_MODEL_EXTERNAL=

# Prompt to use when generating chat titles.
TITLE_GENERATION_PROMPT_TEMPLATE="Create a title for a user prompt

Rules: 
- Create the title based on topics that user asked, so it can be better frame the conversation
- If the topics is too broad , try to make it specific
- Only output the title, do not say 'title: bla bla' , only generate a fitting titlte

This is the  Prompt:
{{prompt:middletruncate:8000}}

Now generate a title:
"

# Prompt to use when generating search queries.
SEARCH_QUERY_GENERATION_PROMPT_TEMPLATE="Assess the need for a web search based on the current question and prior interactions, but lean towards suggesting a Google search query if uncertain. Generate a Google search query even when the answer might be straightforward, as additional information may enhance comprehension or provide updated data. If absolutely certain that no further information is required, return an empty string. Default to a search query if unsure or in doubt. Today's date is {{CURRENT_DATE}}.

Current Question:
{{prompt:end:4000}}

Interaction History:
{{MESSAGES:END:6}}"

# Prompt to use when calling tools.
TOOLS_FUNCTION_CALLING_PROMPT_TEMPLATE="Available Tools: {{TOOLS}}\nReturn an empty string if no tools match the query. If a function tool matches, construct and return a JSON object in the format {\"name\": \"functionName\", \"parameters\": {\"requiredFunctionParamKey\": \"requiredFunctionParamValue\"}} using the appropriate tool and its parameters. Only return the object and limit the response to the JSON object without additional text."

RAG_TEMPLATE="You are given a user query, some textual context and rules, all inside xml tags. You have to answer the query based on the context while respecting the rules.

<context>
[context]
</context>

<rules>
- If you don't know, just say so.
- If you are not sure, ask for clarification.
- Answer in the same language as the user query.
- If the context appears unreadable or of poor quality, tell the user then answer as best as you can.
- If the answer is not in the context but you think you know the answer, explain that to the user then answer with your own knowledge.
- Answer directly and without using xml tags.
</rules>

<user_query>
[query]
</user_query>"
